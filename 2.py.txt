def gas_S(gas, cost, start):
    n= len(gas)
    remaining = 0
    i = start
    started= False
    while i != start or not started:
        started = True
        remaining += gas[i] - cost[i]
        if remaining < 0:
            return False
        i = (i+1)%n
    return True
gas = [1,5,3,3,5,3,1,3,4,5]
cost = [5,2,2,8,2,4,2,5,1,2]
start = 0
print(gas_S(gas, cost, start))


ii)def anagram(str1, str2):
    if len(str1) != len(str2):
        print("not anagram")
    else:
        str1=sorted(str1)
        str2=sorted(str2)
        if str1 == str2:
            s= "anagram"
    return s        
str1=input()
str2=input()
print(anagram(str1,str2))

iii)def kth_largest(arr,n):
    for i in range(n-1):
        for j in range(n-i-1):
            if arr[j]> arr[j+1]:
                arr[j], arr[j+1]=arr[j+1], arr[j]
            else:
                pass
    return arr 
n = int(input())
arr=[]
for i in range(n):
    arr.append(int(input()))
print("k")
k = int(input())
kth_largest(arr,n)
print(arr)
print(arr[k])

iv)def MaxChar(s):
    s=s.lower()
    c=0
    v=''
    for i in s:
        j = s.count(i)
        if j>c:
            c=j
            v=i
        elif (j == c and ord(v) > ord(i)):
            v=i
    return v
s = input()
print(MaxChar(s))

v)#The Penalty Shootout
def penaltyScore(S):
	# code here
	c = 0
	for i in range(len(S)-1):
		if S[i] == '2' and S[i+1] == '1':
			c+=1
			continue
	return c
S = input()
print(penaltyScore(S))
 # 1 = goal
 # 0 no goal
 # 2 penalty goal
 # i/p 1012012112110
 # o/p 2

vi)def kth_perm(n,k):
    permutation=[]
    unused = list(range(1,n+1))
    fact = [1]*(n+1)
    for i in range(1, n+1):
        fact[i] = i*fact[i-1]
    k-=1
    while n>0:
        part_leng = fact[n]//n
        i = k//part_leng
        permutation.append(unused[i])
        unused.pop(i)
        n -=1
        k %= part_leng
    return ''.join(map(str, permutation))
print(kth_perm(3,3))